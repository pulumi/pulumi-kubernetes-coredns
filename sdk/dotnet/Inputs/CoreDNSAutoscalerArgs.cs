// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.KubernetesCoreDNS.Inputs
{

    public sealed class CoreDNSAutoscalerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of cores in the cluster per coredns replica.
        /// </summary>
        [Input("coresPerReplica")]
        public Input<int>? CoresPerReplica { get; set; }

        /// <summary>
        /// Enabled the cluster-proportional-autoscaler.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The image to pull from for the autoscaler.
        /// </summary>
        [Input("image")]
        public Input<Inputs.CoreDNSImageArgs>? Image { get; set; }

        /// <summary>
        /// Whether to include unschedulable nodes in the nodes/cores calculations - this requires version 1.8.0+ of the autoscaler.
        /// </summary>
        [Input("includeUnschedulableNodes")]
        public Input<bool>? IncludeUnschedulableNodes { get; set; }

        /// <summary>
        /// Max size of replicaCount
        /// </summary>
        [Input("max")]
        public Input<int>? Max { get; set; }

        /// <summary>
        /// Min size of replicaCount
        /// </summary>
        [Input("min")]
        public Input<int>? Min { get; set; }

        /// <summary>
        /// Number of nodes in the cluster per coredns replica.
        /// </summary>
        [Input("nodesPerReplica")]
        public Input<int>? NodesPerReplica { get; set; }

        /// <summary>
        /// If true does not allow single points of failure to form.
        /// </summary>
        [Input("preventSinglePointFailure")]
        public Input<bool>? PreventSinglePointFailure { get; set; }

        public CoreDNSAutoscalerArgs()
        {
        }
        public static new CoreDNSAutoscalerArgs Empty => new CoreDNSAutoscalerArgs();
    }
}
