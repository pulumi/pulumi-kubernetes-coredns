// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.KubernetesCoreDNS.Inputs
{

    public sealed class CoreDNSPrometheusMonitorArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalLabels")]
        private InputMap<string>? _additionalLabels;

        /// <summary>
        /// Additional labels that can be used so ServiceMonitor will be discovered by Prometheus.
        /// </summary>
        public InputMap<string> AdditionalLabels
        {
            get => _additionalLabels ?? (_additionalLabels = new InputMap<string>());
            set => _additionalLabels = value;
        }

        /// <summary>
        /// Set this to true to create ServiceMonitor for Prometheus operator.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Selector to select which namespaces the Endpoints objects are discovered from.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        public CoreDNSPrometheusMonitorArgs()
        {
        }
        public static new CoreDNSPrometheusMonitorArgs Empty => new CoreDNSPrometheusMonitorArgs();
    }
}
